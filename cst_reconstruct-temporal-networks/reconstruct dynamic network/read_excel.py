import pandas as pd
import matplotlib.pyplot as plt
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np

def plot_network_connectivity():
    n = 100  # 网络节点数量
    k_values = range(1, 21)  # 平均度范围，从1到20

    # 创建ER网络和BA网络
    er_connectivity = []
    ba_connectivity = []
    for k in k_values:
        p = k / (n-1)  # 根据平均度计算ER网络的连接概率
        er = nx.erdos_renyi_graph(n, p)
        ba = nx.barabasi_albert_graph(n, k)
        er_connectivity.append(len(max(nx.connected_components(er), key=len)) / n)  # 计算ER网络的连通度
        ba_connectivity.append(len(max(nx.connected_components(ba), key=len)) / n)  # 计算BA网络的连通度

    # 绘制图表
    plt.plot(k_values, er_connectivity, label='ER Network')
    plt.plot(k_values, ba_connectivity, label='BA Network')
    plt.title('Network Connectivity vs. Average Degree')
    plt.xlabel('Average Degree (k)')
    plt.ylabel('Connectivity')
    plt.legend()
    plt.show()

# 调用函数绘制图表
plot_network_connectivity()

results_SIS_BA = pd.read_excel('results_SIS_BA.xlsx')
results_SIS_ER = pd.read_excel('results_SIS_ER.xlsx')
results_CP_ER = pd.read_excel('results_CP_ER.xlsx')
results_CP_BA = pd.read_excel('results_CP_BA.xlsx')
plt.figure(figsize=(20, 8),dpi=400)
plt.subplot(1,2, 1)
plt.plot(results_SIS_ER['choose_time'], results_SIS_ER['_SREL'],'#ef8a62', linestyle='-',label='ER_TPR',linewidth=3)
plt.plot(results_SIS_BA['choose_time'], results_SIS_BA['_SREL'],'#67a9cf' ,linestyle='-',label='BA_TPR',linewidth=3)
plt.plot(results_SIS_ER['choose_time'], 1-results_SIS_ER['_SRNC'],'#ef8a62',linestyle='-.', label='ER_FPR',linewidth=3)
plt.plot(results_SIS_BA['choose_time'], 1-results_SIS_BA['_SRNC'],'#67a9cf' ,linestyle='-.',label='BA_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-2, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-5, 1, '(a)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("t*",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(SIS)",fontsize=20)
plt.legend(prop={'size': 20}, loc='center right')
plt.subplot(1,2, 2)
plt.plot(results_CP_ER['choose_time'], results_CP_ER['_SREL'],'#ef8a62',linestyle='-', label='ER_TPR',linewidth=3)
plt.plot(results_CP_BA['choose_time'], results_CP_BA['_SREL'],'#67a9cf' ,linestyle='-',label='BA_TPR',linewidth=3)
plt.plot(results_CP_ER['choose_time'], 1-results_CP_ER['_SRNC'],'#ef8a62',linestyle='-.', label='ER_FPR',linewidth=3)
plt.plot(results_CP_BA['choose_time'], 1-results_CP_BA['_SRNC'],'#67a9cf' ,linestyle='-.',label='BA_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-2, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-5, 1, '(b)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("t*",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(CP)",fontsize=20)
plt.legend(prop={'size': 20}, loc='center right')
plt.show()


plt.figure(figsize=(20, 8),dpi=400)
plt.subplot(1,2, 1)
plt.plot(results_SIS_ER['choose_time'], results_SIS_ER['_SREL'],'#ef8a62',linestyle='-', label='SIS_TPR',linewidth=3)
plt.plot(results_CP_ER['choose_time'], results_CP_ER['_SREL'],'#67a9cf' ,linestyle='-',label='CP_TPR',linewidth=3)
plt.plot(results_SIS_ER['choose_time'], 1-results_SIS_ER['_SRNC'],'#ef8a62',linestyle='-.', label='SIS_FPR',linewidth=3)
plt.plot(results_CP_ER['choose_time'], 1-results_CP_ER['_SRNC'],'#67a9cf' ,linestyle='-.',label='CP_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-2, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-5, 1, '(a)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("t*",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(ER)",fontsize=20)
plt.legend(prop={'size': 20}, loc='center right')
plt.subplot(1,2, 2)
plt.plot(results_SIS_BA['choose_time'], results_SIS_BA['_SREL'],'#ef8a62',linestyle='-', label='SIS_TPR',linewidth=3)
plt.plot(results_CP_BA['choose_time'], results_CP_BA['_SREL'],'#67a9cf' ,linestyle='-',label='CP_TPR',linewidth=3)
plt.plot(results_SIS_BA['choose_time'], 1-results_SIS_BA['_SRNC'],'#ef8a62',linestyle='-.', label='SIS_FPR',linewidth=3)
plt.plot(results_CP_BA['choose_time'], 1-results_CP_BA['_SRNC'],'#67a9cf' ,linestyle='-.',label='CP_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-2, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-5, 1, '(b)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("t*",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(BA)",fontsize=20)
plt.legend(prop={'size': 20}, loc='center right')
plt.show()

## ----------------------------------------#-------------------------

avg_results_SIS_BA = pd.read_excel('average_results_SIS_BA.xlsx')
avg_results_SIS_ER = pd.read_excel('average_results_SIS_ER.xlsx')
avg_results_CP_ER = pd.read_excel('average_results_CP_ER.xlsx')
avg_results_CP_BA = pd.read_excel('average_results_CP_BA.xlsx')

plt.figure(figsize=(20, 8),dpi=400)
plt.subplot(1,2, 1)
plt.plot(avg_results_SIS_ER['p']*100, avg_results_SIS_ER['avg_SREL'],color='#ef8a62', linestyle='-', label='ER_TPR',linewidth=3)
plt.plot(avg_results_SIS_BA['p']*100, avg_results_SIS_BA['avg_SREL'],color='#67a9cf', linestyle='-' ,label='BA_TPR',linewidth=3)
plt.plot(avg_results_SIS_ER['p']*100, 1-avg_results_SIS_ER['avg_SRNC'],color='#ef8a62', linestyle='-.', label='ER_FPR',linewidth=3)
plt.plot(avg_results_SIS_BA['p']*100, 1-avg_results_SIS_BA['avg_SRNC'],color='#67a9cf', linestyle='-.' ,label='BA_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-1, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-2, 1, '(a)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("average degree <k>",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(SIS)",fontsize=20)
plt.legend(prop={'size': 20}, loc='upper right')
plt.subplot(1,2, 2)
plt.plot(avg_results_CP_ER['p']*100, avg_results_CP_ER['avg_SREL'],color='#ef8a62', linestyle='-',label='ER_TPR',linewidth=3)
plt.plot(avg_results_CP_BA['p']*100, avg_results_CP_BA['avg_SREL'],color='#67a9cf', linestyle='-',label='BA_TPR',linewidth=3)
plt.plot(avg_results_CP_ER['p']*100, 1-avg_results_CP_ER['avg_SRNC'],color='#ef8a62', linestyle='-.',label='ER_FPR',linewidth=3)
plt.plot(avg_results_CP_BA['p']*100, 1-avg_results_CP_BA['avg_SRNC'],color='#67a9cf', linestyle='-.',label='BA_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-1, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-2, 1, '(b)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("average degree <k>",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(CP)",fontsize=20)
plt.legend(prop={'size': 20}, loc='upper right')
plt.show()


plt.figure(figsize=(20, 8),dpi=400)
plt.subplot(1,2, 1)
plt.plot(avg_results_SIS_ER['p']*100, avg_results_SIS_ER['avg_SREL'],color='#ef8a62', linestyle='-', label='SIS_TPR',linewidth=3)
plt.plot(avg_results_CP_ER['p']*100, avg_results_CP_ER['avg_SREL'],color='#67a9cf', linestyle='-' ,label='CP_TPR',linewidth=3)
plt.plot(avg_results_SIS_ER['p']*100, 1-avg_results_SIS_ER['avg_SRNC'],color='#ef8a62', linestyle='-.', label='SIS_FPR',linewidth=3)
plt.plot(avg_results_CP_ER['p']*100, 1-avg_results_CP_ER['avg_SRNC'],color='#67a9cf', linestyle='-.' ,label='CP_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-1, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-2, 1, '(a)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("average degree <k>",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(ER)",fontsize=20)
plt.legend(prop={'size': 20}, loc='upper right')
plt.subplot(1,2, 2)
plt.plot(avg_results_SIS_BA['p']*100, avg_results_SIS_BA['avg_SREL'],color='#ef8a62', linestyle='-',label='SIS_TPR',linewidth=3)
plt.plot(avg_results_CP_BA['p']*100, avg_results_CP_BA['avg_SREL'],color='#67a9cf', linestyle='-',label='CP_TPR',linewidth=3)
plt.plot(avg_results_SIS_BA['p']*100, 1-avg_results_SIS_BA['avg_SRNC'],color='#ef8a62', linestyle='-.',label='SIS_FPR',linewidth=3)
plt.plot(avg_results_CP_BA['p']*100, 1-avg_results_CP_BA['avg_SRNC'],color='#67a9cf', linestyle='-.',label='CP_FPR',linewidth=3)
plt.axhline(y=0.9, color='gray', linestyle='--')
plt.text(-1, 0.9, '0.9', color='gray', fontsize=20, va='center', ha='right')
plt.text(-2, 1, '(b)', color='black', fontsize=20, va='center', ha='right')
plt.axhline(y=0.1, color='gray', linestyle='--')
plt.text(-2, 0.1, '0.1', color='gray', fontsize=20, va='center', ha='right')
plt.xlabel("average degree <k>",fontsize=20)
plt.ylabel("Success rate",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylim(0,1)
plt.title("Effect of reconstructing with $t^*$(BA)",fontsize=20)
plt.legend(prop={'size': 20}, loc='upper right')
plt.show()